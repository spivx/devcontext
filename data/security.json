[
    {
        "id": "auth",
        "question": "How should authentication and secrets be handled?",
        "answers": [
            {
                "value": "env",
                "label": "Environment variables only",
                "example": "API keys must come from process.env",
                "docs": "https://12factor.net/config",
                "isDefault": true
            },
            {
                "value": "vault",
                "label": "Secrets manager (Vault, AWS, etc.)",
                "example": "Fetch secrets from a secure vault",
                "docs": "https://developer.hashicorp.com/vault/docs"
            }
        ]
    },
    {
        "id": "validation",
        "question": "What validation rules should we follow?",
        "answers": [
            {
                "value": "zod",
                "label": "Zod schema validation",
                "example": "Use Zod for all API input validation",
                "docs": "https://zod.dev/?id=introduction",
                "isDefault": true
            },
            {
                "value": "yup",
                "label": "Yup validation",
                "example": "Use Yup schemas for forms and requests",
                "docs": "https://github.com/jquense/yup"
            }
        ]
    },
    {
        "id": "logging",
        "question": "What logging practices should we follow?",
        "answers": [
            {
                "value": "noSecrets",
                "label": "Never log secrets",
                "example": "Do not log tokens or passwords",
                "docs": "https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html",
                "isDefault": true
            },
            {
                "value": "structured",
                "label": "Structured logging",
                "example": "Use JSON logs with context fields",
                "docs": "https://12factor.net/logs"
            }
        ]
    }
]
